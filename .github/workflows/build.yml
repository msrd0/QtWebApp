name: Build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Ubuntu 20.04 GCC"
            os: ubuntu-20.04
            cc: "gcc"
            cxx: "g++"
            linkflags: ""
          - name: "Ubuntu 20.04 Clang/LLD"
            os: ubuntu-20.04
            cc: "clang"
            cxx: "clang++"
            linkflags: "-fuse-ld=lld"
          - name: "MacOS Latest Clang"
            os: macos-latest
            cc: "clang"
            cxx: "clang++"
            linkflags: ""
    steps:
      - uses: actions/checkout@v2
      - uses: jurplel/install-qt-action@v2
      
      - name: Build QtWebApp
        run: |
          pushd QtWebApp
          mkdir build
          pushd build
          cmake -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=Release ..
          make
          sudo make install
          popd # build
          popd # QtWebApp
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          LDFLAGS: ${{ matrix.linkflags }}
      
      - name: Build Demo1
        run: |
          pushd Demo1
          mkdir build
          pushd build
          cmake -G 'Unix Makefiles' ..
          make
          popd # Demo1
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          LDFLAGS: ${{ matrix.linkflags }}
      
      - name: Build Demo2
        run: |
          pushd Demo2
          mkdir build
          pushd build
          cmake -G 'Unix Makefiles' ..
          make
          popd # Demo2
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          LDFLAGS: ${{ matrix.linkflags }}

  windows-mingw:
    name: "Windows [mingw 32 bit]"
    runs-on: windows-2019
    strategy:
      matrix:
        qt_version: ["5.15.2"]
    steps:
      - uses: actions/checkout@v2
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          arch: win32_mingw81
          version: ${{ matrix.qt_version }}

      - name: Download Qt MinGW
        shell: cmake -P {0}
        run: |
          file(DOWNLOAD "https://download.qt.io/online/qtsdkrepository/windows_x86/desktop/tools_mingw/qt.tools.win32_mingw810/8.1.0-1-202004170606i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z" ../tools.7z )

      - name: Unzip MinGW
        shell: bash
        run: |
          cd ../
          7z x ./tools.7z

      - name: Add Qt and g++ to PATH
        run: |
          echo "$Qt5_DIR/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          cd ..
          echo "$PWD/Tools/mingw810_32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - run: cmake -S QtWebApp -B build-qtwebapp -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=Release
      - run: cmake --build build-qtwebapp
      - run: cmake --build build-qtwebapp --target install
